{"version":3,"sources":["types/Filter.ts","components/TodosContext/TodosContext.tsx","components/TodoList/TodoList.tsx","services/Filter.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodosContext","createContext","selectedTodo","setSelectedTodo","TodosProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","value","useMemo","_jsx","Provider","TodoList","React","memo","visibleTodos","_useContext","useContext","_jsxs","className","map","todo","cn","id","completed","title","type","onClick","filterAndSortTodos","text","opinion","originalTodos","filter","Active","Comleted","toUpperCase","includes","trim","TodoFilter","setTodos","query","setQuery","_useState3","All","_useState4","useOpinion","setUseOpinion","timerId","useRef","onSubmit","event","preventDefault","onChange","newOpinion","target","placeholder","window","clearTimeout","current","setTimeout","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","then","fetch","res","json","TodoModal","user","setUser","useEffect","userId","concat","_Fragment","href","email","name","App","setOriginalTodos","setVisibleTodos","_useState5","_useState6","loading","setLoading","date","catch","finally","newTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.993db581.chunk.js","sourcesContent":["export enum Filter {\n  All = 'All',\n  Active = 'Active',\n  Comleted = 'Completed',\n}\n","import React, { useMemo, useState, createContext } from 'react';\nimport { Todo } from '../../types/Todo';\n\nexport const TodosContext = createContext<{\n  selectedTodo: Todo | null;\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n}>({\n  selectedTodo: null,\n  setSelectedTodo: () => { },\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const value = useMemo(() => ({\n    selectedTodo,\n    setSelectedTodo,\n  }), [selectedTodo, setSelectedTodo]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../TodosContext';\n\ntype Props = {\n  visibleTodos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({ visibleTodos }) => {\n  const { selectedTodo, setSelectedTodo } = useContext(TodosContext);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={cn({ 'has-background-info-light': selectedTodo })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                {todo.completed && (\n                  <i className=\"fas fa-check\" />\n                )}\n              </span>\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                todo.completed ? 'has-text-success' : 'has-text-danger'\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                    'far fa-eye': selectedTodo !== todo,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import { Todo } from '../types/Todo';\nimport { Filter } from '../types/Filter';\n\nexport function filterAndSortTodos(\n  text: string,\n  opinion: Filter,\n  originalTodos: Todo[],\n) {\n  const filteredTodo = originalTodos\n    .filter((todo) => {\n      if (opinion === Filter.Active) {\n        return !todo.completed;\n      }\n\n      if (opinion === Filter.Comleted) {\n        return todo.completed;\n      }\n\n      return true;\n    })\n    .filter((todo) => {\n      return todo.title.toUpperCase().includes(text.toUpperCase().trim());\n    });\n\n  return filteredTodo;\n}\n","import React, { useState, useRef } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Filter } from '../../types/Filter';\nimport { filterAndSortTodos } from '../../services/Filter';\n\ntype Props = {\n  originalTodos: Todo[],\n  setTodos: (newTodos: Todo[]) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = React.memo(\n  ({\n    originalTodos,\n    setTodos,\n  }) => {\n    const [query, setQuery] = useState('');\n    const [useOpinion, setUseOpinion] = useState(Filter.All);\n    const timerId = useRef(0);\n\n    const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setQuery(event.target.value);\n\n      window.clearTimeout(timerId.current);\n      timerId.current = window.setTimeout(() => {\n        setTodos(\n          filterAndSortTodos(event.target.value, useOpinion, originalTodos),\n        );\n      }, 500);\n    };\n\n    const handleChangeOpinion = (\n      event: React.ChangeEvent<HTMLSelectElement>,\n    ) => {\n      const newOpinion = event.target.value as Filter;\n\n      setUseOpinion(newOpinion);\n      setTodos(filterAndSortTodos(\n        query, newOpinion, originalTodos,\n      ));\n    };\n\n    const reset = () => {\n      setQuery('');\n      setTodos(originalTodos);\n    };\n\n    return (\n      <form\n        className=\"field has-addons\"\n        onSubmit={(event) => {\n          event.preventDefault();\n        }}\n      >\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              onChange={handleChangeOpinion}\n              value={useOpinion}\n            >\n              <option value={Filter.All}>All</option>\n              <option value={Filter.Active}>Active</option>\n              <option value={Filter.Comleted}>Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {query && (\n              /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={reset}\n              />\n            )}\n          </span>\n        </p>\n      </form>\n    );\n  },\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { TodosContext } from '../TodosContext';\n\nexport const TodoModal: React.FC = () => {\n  const { selectedTodo, setSelectedTodo } = useContext(TodosContext);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then(setUser);\n    }\n  }, [selectedTodo, selectedTodo?.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {selectedTodo ? `Todo #${selectedTodo.id}` : ''}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title || ''}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo ? (\n                <strong className={selectedTodo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {selectedTodo.completed ? 'Done' : 'Planned'}\n                </strong>\n              ) : null}\n\n              {user ? (\n                <>\n                  {' by '}\n                  <a href={user.email}>\n                    {user.name}\n                  </a>\n                </>\n              ) : null}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodosContext } from './components/TodosContext';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [originalTodos, setOriginalTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(originalTodos);\n  const [loading, setLoading] = useState(false);\n\n  const { selectedTodo } = useContext(TodosContext);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then((date) => {\n        setOriginalTodos(date);\n        setVisibleTodos(date);\n      })\n      .catch(() => setOriginalTodos([]))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setTodos={(newTodos) => setVisibleTodos(newTodos)}\n                originalTodos={originalTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (<Loader />)}\n              {!loading && !!visibleTodos.length && (\n                <TodoList visibleTodos={visibleTodos} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './components/TodosContext';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}